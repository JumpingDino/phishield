version: '3.2'

services:
  traefik:
    image: traefik:v3.0
    container_name: phishield-traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.devcontainer/traefik/:/etc/traefik/
    environment:
      - TRAEFIK_LOG_LEVEL=DEBUG
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS=:443
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS=true
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_FILE=true
      - TRAEFIK_PROVIDERS_FILE_DIRECTORY=/etc/traefik/
    depends_on:
      - devcontainer
  
  devcontainer:
    build:
      context: ./
      dockerfile: .devcontainer/Dockerfile
    container_name: phishield-devcontainer
    env_file: .env
    image: phishield/devcontainer:latest
    working_dir: /phishield
    tty: true
    user: vscode:vscode
    shm_size: "4gb"
    volumes:
      - ./:/phishield/
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.ssh:/home/vscode/.ssh
      - ./.devcontainer/traefik/:/etc/traefik/
    environment:
      - TRAEFIK_LOG_LEVEL=DEBUG
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS=:443
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS=true
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_FILE=true
      - TRAEFIK_PROVIDERS_FILE_DIRECTORY=/etc/traefik/
    depends_on:
      - database
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect.redirectscheme.permanent=true"

      # FastAPI
      - "traefik.http.routers.api_http.entrypoints=web"
      - "traefik.http.routers.api_https.entrypoints=websecure"
      - "traefik.http.routers.api_http.middlewares=redirect"
      - "traefik.http.routers.api_http.rule=Host(`dev-api.phishield.dev`)"
      - "traefik.http.routers.api_https.rule=Host(`dev-api.phishield.dev`)"
      - "traefik.http.routers.api_https.tls=true"
      - "traefik.http.routers.api_http.service=api"
      - "traefik.http.routers.api_https.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=8000"

  backend:
    build:
      context: ./
      dockerfile: .devcontainer/Dockerfile
    env_file: .env
    working_dir: /phishield/backend/phishield
    tty: true
    user: vscode:vscode
    command: hatch --no-interactive -v run phishield api --dev
    restart: on-failure:3
    pid: service:devcontainer
    network_mode: service:devcontainer
    volumes_from:
      - devcontainer
    depends_on:
      - database
      - storage
      - cache
  
  worker:
    build:
      context: ./
      dockerfile: .devcontainer/Dockerfile
    env_file: .env
    working_dir: /phishield/backend/phishield
    tty: true
    user: vscode:vscode
    command: hatch --no-interactive -v run phishield worker --dev
    restart: on-failure:3
    pid: service:devcontainer
    network_mode: service:devcontainer
    volumes_from:
      - devcontainer
    depends_on:
      - database
      - storage
      - cache

  database:
    image: bitnami/postgresql:latest
    container_name: phishield-database
    env_file: .env
  
  cache:
    image: redis:6-alpine
    restart: always
  
  storage:
    image: minio/minio:latest
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file: .env